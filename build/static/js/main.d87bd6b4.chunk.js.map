{"version":3,"sources":["Componentes/Header.js","Componentes/Formulario.js","helpers.js","Componentes/Resultado.js","Componentes/Mensaje.js","Componentes/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","Formulario","props","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","useState","error","guardarError","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Resultado","toFixed","Mensaje","Spinner","App","componente","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87bd6b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({titulo}) => (\r\n    <h1>{titulo}</h1>\r\n\r\n)\r\n\r\nexport default Header;","import React, {Fragment, useState} from 'react';\r\nimport { calcularTotal } from '../helpers';\r\n\r\nconst Formulario = (props) => {\r\n    \r\n    const {cantidad, guardarCantidad, plazo, guardarPlazo, guardarTotal, guardarCargando} = props;\r\n\r\n    // Definir state\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const calcularPrestamo = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if(cantidad === 0 || plazo === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        // Cambiar error previo\r\n        guardarError(false);\r\n\r\n        // Habilitar el spinner\r\n        guardarCargando(true);\r\n\r\n        setTimeout( () => {\r\n            // Realizar cotizaci√≥n\r\n            const total = calcularTotal(cantidad, plazo);\r\n\r\n            // Una vez calculado, guardarTotal\r\n            guardarTotal(total);\r\n\r\n            // Deshabilitar spinner\r\n            guardarCargando(false)\r\n        },3000)\r\n        \r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n        <form onSubmit={calcularPrestamo}>\r\n          <div className=\"row\">\r\n              <div>\r\n                  <label>Cantidad Prestamo</label>\r\n                  <input \r\n                      className=\"u-full-width\" \r\n                      type=\"number\" \r\n                      placeholder=\"Ejemplo: 3000\"\r\n                      onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n                  />\r\n              </div>\r\n              <div>\r\n                  <label>Plazo para Pagar</label>\r\n                  <select \r\n                      className=\"u-full-width\"\r\n                      onChange= {e => guardarPlazo(parseInt(e.target.value))}\r\n                  >\r\n                      <option value=\"\">Seleccionar</option>\r\n                      <option value=\"3\">3 meses</option>\r\n                      <option value=\"6\">6 meses</option>\r\n                      <option value=\"12\">12 meses</option>\r\n                      <option value=\"24\">24 meses</option>\r\n                  </select>\r\n              </div>\r\n              <div>\r\n                  <input \r\n                      type=\"submit\" \r\n                      value=\"Calcular\" \r\n                      className=\"button-primary u-full-width\" \r\n                  />\r\n              </div>\r\n          </div>\r\n  </form>\r\n        {(error) ? <p className=\"error\">Todos los campos son obligatorios</p> : null }\r\n      \r\n  </Fragment>\r\n  \r\n     );\r\n}\r\n\r\nexport default Formulario;","export function calcularTotal(cantidad, plazo){\r\n    // Cantidades\r\n    // 0 - 1000 = 25%\r\n    // 1001 - 5000 = 20%\r\n    // 5001 - 10000 = 15%\r\n    // +10000 = 10%\r\n\r\n    let totalCantidad;\r\n    if(cantidad <= 1000){\r\n        totalCantidad = cantidad * .25;\r\n    }else if(cantidad > 1000 && cantidad <= 5000){\r\n        totalCantidad = cantidad * .20;\r\n    }else if(cantidad > 5000 && cantidad <= 10000){\r\n        totalCantidad = cantidad * .15;\r\n    }else{\r\n        totalCantidad = cantidad * .10;\r\n    }\r\n\r\n    // Calcular plazo\r\n    // 3 meses - 5%\r\n    // 6 meses - 10%\r\n    // 12 meses - 15%\r\n    // 24 meses - 20%\r\n\r\n    let totalPlazo = 0;\r\n    switch(plazo){\r\n        case 3:\r\n            totalPlazo = cantidad * .05;\r\n            break;\r\n        case 6:\r\n            totalPlazo = cantidad * .10;\r\n            break;\r\n        case 12:\r\n            totalPlazo = cantidad * .15;\r\n            break;\r\n        case 24:\r\n            totalPlazo = cantidad * .20;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return totalPlazo + totalCantidad + cantidad;\r\n\r\n}","import React from 'react';\r\n\r\nconst Resultado = ({total, plazo, cantidad}) => (\r\n    <div className=\"u-full-width resultado\">\r\n        <h2>Resumen</h2>\r\n        <p>La cantidad solicitada es: $ {cantidad}</p>\r\n        <p>A pagar en: {plazo} meses</p>\r\n        <p>Su pago mensual es de: $ {(total/plazo).toFixed(2)}</p>\r\n        <p>Total a pagar: $ {(total).toFixed(2)}</p>\r\n    </div>\r\n)\r\n \r\nexport default Resultado;","import React from 'react';\r\n\r\nconst Mensaje = () => (\r\n    <p>Agrega una cantidad y plazo a pagar para cotizar</p>\r\n);\r\n \r\nexport default Mensaje;","import React from 'react';\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"spinner\">\r\n        <div className=\"double-bounce1\"></div>\r\n        <div className=\"double-bounce2\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;\r\n    \r\n","import React, {Fragment, useState} from 'react';\nimport Header from './Componentes/Header';\nimport Formulario from \"./Componentes/Formulario\";\nimport Resultado from './Componentes/Resultado';\nimport Mensaje from './Componentes/Mensaje';\nimport Spinner from './Componentes/Spinner';\n\nfunction App() {\n  // Definir el state\n  const [cantidad, guardarCantidad] = useState(0);\n  const [plazo, guardarPlazo] = useState('');\n  const [total, guardarTotal] = useState(0);\n  const [cargando, guardarCargando] = useState(false);\n\n  let componente;\n  if(cargando){\n    componente = <Spinner />\n  }else if(total === 0){\n    componente = <Mensaje />\n  }else{\n    componente = <Resultado\n                    total={total}\n                    plazo={plazo}\n                    cantidad={cantidad}\n    />\n  }\n\n  return (\n    <Fragment>\n      <Header\n        titulo=\"Cotizador de Prestamos\"\n      />\n      <div className=\"container\">\n          <Formulario\n            cantidad = {cantidad}\n            guardarCantidad = {guardarCantidad}\n            plazo = {plazo}\n            guardarPlazo = {guardarPlazo}\n            total={total}\n            guardarTotal={guardarTotal}\n            guardarCargando={guardarCargando}\n          />\n        <div className=\"mensajes\">\n            {componente}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}